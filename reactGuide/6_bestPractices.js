#How to approach passing data layer many layers deep, is this wasteful

 1) With React



 2) With Redux 


#How to approach Navigation within an App



#How to approaching loading intial data, especiall if it is large
	
	(albert recommended using some type of switch mechanism???)
	1) Have an inital state, set the redux store with an inital state (default state redux store?)


	2) Have a loading page, untill the data loads (I believe this is implemented) 


	3) Cache so the request pull is really fast


#Optimistic Updating Optimizations
	1) If data goes to server, you need to wait for the next pull to be updated within the component
		a) Before you update the service, just do a this.setState via this or redux
		b) to change the compoent before you take a server action

		ex)
		handleCommentSubmit: function(comment) {
			var comments = this.state.data;
			// Optimistically set an id on the new comment. It will be replaced by an
			// id generated by the server. In a production application you would likely
			// not use Date.now() for this and would have a more robust system in place.
			comment.id = Date.now();
			var newComments = comments.concat([comment]);
			this.setState({data: newComments});
			$.ajax({
				url: this.props.url,
				dataType: 'json',
				type: 'POST',
				data: comment,
				success: function(data) {
					this.setState({data: data});
				}.bind(this),
				error: function(xhr, status, err) {
					this.setState({data: comments});
					console.error(this.props.url, status, err.toString());
				}.bind(this)
			});
		},


#How to Approach Modals





#How to approach Key item access, best practices for key generation







